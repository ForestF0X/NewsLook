apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def credentialFile = rootProject.file("credentials.properties")
def credentialProperty = new Properties()
credentialProperty.load(new FileInputStream(credentialFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.newslook"
        minSdk 27
        targetSdk 32
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        buildConfigField("String", "NEWS_API_KEY", credentialProperty["NEWS_API_KEY"])
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        'room.schemaLocation': "$projectDir/schemas".toString(),
                        'room.incremental': 'true'
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        // Share test utilities between unit and instrumented tests
        test.java.srcDirs += 'src/sharedTest/kotlin'
        androidTest.java.srcDirs += 'src/sharedTest/kotlin'
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/**']
        }
        resources {
            excludes += ['META-INF/**', '*.txt', '**.kotlin_metadata', '**.kotlin_builtins', '**.kotlin_module']
        }
    }


    buildFeatures {
        viewBinding true
    }
}

kapt {
    mapDiagnosticLocations = true
//    arguments {
//        arg('room.schemaLocation', roomSchemaDir)
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'

    // Kotlin Flow
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'

    // Support Libraries
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    implementation 'com.github.mrmike:ok2curl:0.8.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.3.1'

    // Lifecycle (ViewModel + LiveData)
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'

    // Room
    implementation 'androidx.room:room-runtime:2.4.2'
    kapt 'androidx.room:room-compiler:2.4.2'
    implementation 'androidx.room:room-ktx:2.4.2'

    // Coil
    implementation 'io.coil-kt:coil:0.11.0'

    // Hilt + Dagger
    implementation 'com.google.dagger:hilt-android:2.40.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.40.1'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // KTX
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    // DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha04"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
